#!/usr/bin/env ruby
ENV['RACK_ENV'] ||= 'development'
# load path
lib_path = File.expand_path('../../lib', __FILE__)
($:.unshift lib_path) unless ($:.include? lib_path)

require 'thor'
require 'hyperdrive'
# require 'api'

module Hyperdrive
  class CLI < Thor

    desc "docs FILE", "generates docs for hyperdrive resources"
    def docs(file)
      require_file(file)
      @docs = ""
      resources.each_value do |resource|
        @docs += header(resource.name)
        @docs += paragraph(resource.desc)
        @docs += header("Params", 2)
        @docs += params(resource.allowed_params)
        @docs += header("Filter", 2)
        @docs += params(resource.filters)
      end
      p @docs
      #create_file(output, @docs)
      say "Done!"
    end

    private


    def resources
      Hyperdrive::DSL::Main.instance.resources
    end

    def require_file(file)
      require "./#{file}"
    end

    def header(string, level = 1)
      header = "#" * level
      header += string.capitalize
      "\n#{header}\n\n"
    end

    def paragraph(string)
      "#{string}\n"
    end

    def params(params)
      params_list = ""
      params.each do |k, v|
        params_list += "- **#{k}** \- #{v[:desc]}\n\n#{print_required(v[:required])}\n"
      end
      params_list
    end

    def print_required(required_opts)
      default_opts = ["GET", "HEAD", "OPTIONS", "POST", "PUT", "PATCH", "DELETE"]

      if array?(required_opts)
        create_requirements(required_opts)
      elsif required_opts == true
        create_requirements(default_opts)
      else
        string = ""
      end
    end

    def array?(required_opt)
      required_opt.class == Array
    end

    def create_requirements(opts)
      string = "\n - **Required**: "
      opts.each { |opt| string += " #{opt}, "}
      string
    end
  end
end
Hyperdrive::CLI.start








