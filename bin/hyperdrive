#!/usr/bin/env ruby
ENV['RACK_ENV'] ||= 'development'
# load path
lib_path = File.expand_path('../../lib', __FILE__)
($:.unshift lib_path) unless ($:.include? lib_path)

require 'thor'
require 'hyperdrive'
# require 'api'

module Hyperdrive
  class CLI < Thor

    desc "docs FILE", "generates docs for hyperdrive resources"
    def docs(file)
      require_file(file)
      @docs = ""
      resources.each_value do |resource|
        @docs += header(resource.name, 2)
        @docs += paragraph(resource.desc)
        @docs += "##Params\n\n"
        @docs += params(resource.allowed_params)
        @docs += "##Filters\n\n"
        @docs += params(resource.filters)

      end
      p @docs
      #create_file(output, @docs)
      say "Done!"
    end

    private


    def resources
      Hyperdrive::DSL::Main.instance.resources
    end

    def require_file(file)
      require "./#{file}"
    end

    def header(string, level = 1)
      header = "#" * level
      header += string
      "#{header}\n\n"
    end

    def paragraph(string)
      "#{string}\n"
    end

    def params(params)
      params_list = ""
      params.each do |k, v|
        params_list += "- **#{k}**#{print_required(v[:required])}- #{v[:desc]}\n\n"
      end
      params_list
    end

    def print_required(required_opt)
      required_opt ? "(required)" : ""
    end
  end
end
Hyperdrive::CLI.start








